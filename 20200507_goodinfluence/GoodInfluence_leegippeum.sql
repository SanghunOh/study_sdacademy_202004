-- -- SQLite
-- DELETE FROM GOOD_STORE;
-- INSERT INTO GOOD_STORE (
-- STORE_ID,
--   STORE_NAME,
--   OWNER     ,
--   TEL       ,
--   ADDRESS   ,
--   PROVINCE_ID,
--   OPR_TIME   ,
--   PERSONELL_ID,
--   PARTICIPATE_ID,
--   MENTYPE_ID    ,
--   DONATION_ID)
-- SELECT `순번`,
--     `상호명`,
--     `진함`,
--     `사업장 연락처`,
--     `사업장 주소(주소, 건물명, 명, 호수 등)`,
--     (SELECT ifnull(max(PROVINCE_ID),514) FROM LOCATION 
--     WHERE `지역` = LOCATION.PROVINCE_NAME),
--     '11:00~21:00', 
--     (SELECT ifnull(max(PERSONELL_ID),19) FROM BENEFIT_PERSONELL 
--     WHERE `제공대상1` = BENEFIT_PERSONELL.AMOUNT_OF_PERSONELL),
--     (SELECT ifnull(max(PARTICIPATE_ID),1) FROM DONATION_GENERAL 
--     WHERE `후원 회원 참여 여부` = DONATION_GENERAL.PATICIPATION),
--     (SELECT ifnull(max(MENTYPE_ID),2) FROM BENEFIT_MENU 
--     WHERE `제공품목(전메뉴 or 일부, 한정 상품 등)` = BENEFIT_MENU.MENU_TYPE),
--     (SELECT ifnull(max(DONATION_ID),2) FROM ROUTINAL_DONATION 
--     WHERE `월 정기 후원` = ROUTINAL_DONATION.DONATION_AMOUNT)
-- FROM `temp_dump_excel_table`;




-- INNER JOIN
SELECT GOOD_STORE.STORE_ID, GOOD_STORE.STORE_NAME, GOOD_STORE.OWNER, GOOD_STORE.TEL, GOOD_STORE.ADDRESS, 
LOCATION.PROVINCE_NAME, 
OPERATING_TIME.OPR_TIME,
BENEFIT_PERSONELL.AMOUNT_OF_PERSONELL, 
DONATION_GENERAL.PATICIPATION, 
BENEFIT_MENU.MENU_TYPE, 
ROUTINAL_DONATION.DONATION_AMOUNT

FROM GOOD_STORE

INNER JOIN LOCATION
ON GOOD_STORE.STORE_ID = LOCATION.PROVINCE_ID

INNER JOIN OPERATING_TIME
ON GOOD_STORE.OPR_TIME = OPERATING_TIME.OPR_TIME

INNER JOIN BENEFIT_PERSONELL
ON GOOD_STORE.PERSONELL_ID = BENEFIT_PERSONELL.PERSONELL_ID

INNER JOIN DONATION_GENERAL
ON GOOD_STORE.PARTICIPATE_ID = DONATION_GENERAL.PARTICIPATE_ID

INNER JOIN BENEFIT_MENU
ON GOOD_STORE.MENTYPE_ID = BENEFIT_MENU.MENTYPE_ID

INNER JOIN ROUTINAL_DONATION
ON GOOD_STORE.DONATION_ID = ROUTINAL_DONATION.DONATION_ID;
--



-- COUNT 해서 JOIN 이 잘되었는지 확인하기
-- JOIN 한 상태에서 COUNT를 해주어야 함.
SELECT COUNT(GOOD_STORE.STORE_ID)

FROM GOOD_STORE

INNER JOIN LOCATION
ON GOOD_STORE.STORE_ID = LOCATION.PROVINCE_ID

INNER JOIN OPERATING_TIME
ON GOOD_STORE.OPR_TIME = OPERATING_TIME.OPR_TIME

INNER JOIN BENEFIT_PERSONELL
ON GOOD_STORE.PERSONELL_ID = BENEFIT_PERSONELL.PERSONELL_ID

INNER JOIN DONATION_GENERAL
ON GOOD_STORE.PARTICIPATE_ID = DONATION_GENERAL.PARTICIPATE_ID

INNER JOIN BENEFIT_MENU
ON GOOD_STORE.MENTYPE_ID = BENEFIT_MENU.MENTYPE_ID

INNER JOIN ROUTINAL_DONATION
ON GOOD_STORE.DONATION_ID = ROUTINAL_DONATION.DONATION_ID;
--




-- LEFT JOIN
SELECT GOOD_STORE.STORE_ID, GOOD_STORE.STORE_NAME, GOOD_STORE.OWNER, GOOD_STORE.TEL, GOOD_STORE.ADDRESS, 
LOCATION.PROVINCE_NAME, 
OPERATING_TIME.OPR_TIME,
BENEFIT_PERSONELL.AMOUNT_OF_PERSONELL, 
DONATION_GENERAL.PATICIPATION, 
BENEFIT_MENU.MENU_TYPE, 
ROUTINAL_DONATION.DONATION_AMOUNT

FROM GOOD_STORE

LEFT JOIN LOCATION
ON GOOD_STORE.STORE_ID = LOCATION.PROVINCE_ID

LEFT JOIN OPERATING_TIME
ON GOOD_STORE.OPR_TIME = OPERATING_TIME.OPR_TIME

LEFT JOIN BENEFIT_PERSONELL
ON GOOD_STORE.PERSONELL_ID = BENEFIT_PERSONELL.PERSONELL_ID

LEFT JOIN DONATION_GENERAL
ON GOOD_STORE.PARTICIPATE_ID = DONATION_GENERAL.PARTICIPATE_ID

LEFT JOIN BENEFIT_MENU
ON GOOD_STORE.MENTYPE_ID = BENEFIT_MENU.MENTYPE_ID

LEFT JOIN ROUTINAL_DONATION
ON GOOD_STORE.DONATION_ID = ROUTINAL_DONATION.DONATION_ID;



-- LEFT JOIN 이 잘되었는지 확인하기
SELECT COUNT(GOOD_STORE.STORE_ID)

FROM GOOD_STORE

LEFT JOIN LOCATION
ON GOOD_STORE.STORE_ID = LOCATION.PROVINCE_ID

LEFT JOIN OPERATING_TIME
ON GOOD_STORE.OPR_TIME = OPERATING_TIME.OPR_TIME

LEFT JOIN BENEFIT_PERSONELL
ON GOOD_STORE.PERSONELL_ID = BENEFIT_PERSONELL.PERSONELL_ID

LEFT JOIN DONATION_GENERAL
ON GOOD_STORE.PARTICIPATE_ID = DONATION_GENERAL.PARTICIPATE_ID

LEFT JOIN BENEFIT_MENU
ON GOOD_STORE.MENTYPE_ID = BENEFIT_MENU.MENTYPE_ID

LEFT JOIN ROUTINAL_DONATION
ON GOOD_STORE.DONATION_ID = ROUTINAL_DONATION.DONATION_ID;
--